@derive:eq 
type Category = @enum (suv, hatch, sedan, sport)

type Car = (name String, value Int, category Category) {
    fn new(name String, value Int, category Category) -> Self = (name, value, category)
    
    fn adulterate (self, value Int) -> Self = (value = value, ...self)
    
    @match fn is_suv(self) -> Bool {
        (_, _, Category.suv) => true
        _ => false
    }
 }

tag Car #eq {
    fn eq(self, other Self) -> Bool =  self.name == other.name 
                                    && self.value == other.value 
                                    && self.category == other.category
}