@extern("C") func loop(T, U; from T, do (T) -> Control(T, U)) -> U

func match[T, U](value T, do f (T) -> U) -> U := f(value)

func cases[T](of f () -> T) -> T := f()

func if[T](cond Bool, then () -> T = () -> { null }, else () -> T = () -> { null }) -> T := match (cond) {
    true => then(),
    false => else()
};

test "Cases" {
    x = 5;
    y = 6;

    z = cases of {
        ~ x > y => x * y,
        ~ x < y => x + y,
        _ => 0 
    };

    @assert (5 == 6);
}